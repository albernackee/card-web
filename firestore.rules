service cloud.firestore {
  match /databases/{database}/documents {

    function userIsAdmin() {
      return request.auth.uid == 'TPo5MOn6rNX9k8K1bbejuBNk4Dr2' || request.auth.uid == 'KteKDU7UnHfkLcXAyZXbQ6kRAk13';
    }
    
    function editAddsMessage() {
      //TODO: Also check that the first parts are the same.
      return request.resource.data.messages.size() == resource.data.messages.size() + 1 && request.resource.data.messages[0:resource.data.messages.size()] == resource.data.messages;
    }
    
    function loggedIn() {
      return request.auth.uid != null;
    }
    
    function createIsOwner() {
      return loggedIn() && request.auth.uid == request.resource.data.owner;
    }
    
    function createIsAuthor() {
      return loggedIn() && request.auth.uid == request.resource.data.author;
    }
    
    function updateIsOwner() {
      return loggedIn() && request.auth.uid == resource.data.owner;
    }
    
    function updateIsAuthor() {
      return loggedIn() && request.auth.uid == resource.data.author;
    }

    match /{document=**} {
      allow read: if true;
      allow write: if userIsAdmin();
    }
    
    match /authors/{author} {
      allow write: if request.auth.uid == author;
    }
    
    match /messages/{message} {
      allow create: if createIsAuthor();
      allow update: if updateIsAuthor();
    }
    
    match /threads/{thread} {
      allow create : if createIsAuthor();
      allow update : if updateIsAuthor() || (loggedIn() && editAddsMessage());
    }
    
    match /stars/{star} {
      allow create: if createIsOwner();
      allow update: if updateIsOwner();
      allow delete: if updateIsOwner();
      allow read: if updateIsOwner();
    }

    match /reads/{read} {
      allow create: if createIsOwner();
      allow update: if updateIsOwner();
      allow delete: if updateIsOwner();
      allow read: if updateIsOwner();
    }
  }
}
